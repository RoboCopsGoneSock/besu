name: reference-tests
on:
  pull_request_target:
    branches:
      - main

env:
  GRADLE_OPTS: "-Xmx6g -Dorg.gradle.daemon=false"
  total-runners: 6

jobs:
  prepareReferenceTestEthereum:
    runs-on: ubuntu-22.04
    needs: shouldRun
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
          submodules: recursive
          set-safe-directory: true
      - name: Set up Java
        uses: actions/setup-java@v4.0.0
        with:
          distribution: temurin
          java-version: 17
      - name: setup gradle
        uses: gradle/gradle-build-action@v2.12.0
      - name: execute generate reference tests
        run: ./gradlew ethereum:referencetests:blockchainReferenceTests ethereum:referencetests:generalstateReferenceTests ethereum:referencetests:generalstateRegressionReferenceTests -Dorg.gradle.parallel=true -Dorg.gradle.caching=true
      - name: store generated tests
        uses: actions/upload-artifact@v3
        with:
          name: 'reference-tests'
          path: 'ethereum/referencetests/build/generated/sources/reference-test/**/*.java'

  referenceTestEthereum:
    runs-on: ubuntu-22.04
    permissions:
      statuses: write
      checks: write
    needs:
      - prepareReferenceTestEthereum
    strategy:
      fail-fast: true
      matrix:
        runner_index: [0,1,2,3,4,5]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
          submodules: recursive
      - name: Set up Java
        uses: actions/setup-java@v4.0.0
        with:
          distribution: adopt-openj9
          java-version: 17
      - name: retrieve generated tests
        uses: actions/download-artifact@v3.0.2
        with:
          name: 'reference-tests'
          path: 'ethereum/referencetests/build/generated/sources/reference-test/'
      - name: get reference test report
        uses: docker/login-action@e7466d1a7587ed14867642c2ca74b5bcc1e19a2d@v3
        with:
          branch: main
          name_is_regexp: true
          name: 'reference-test-node-\d*\d-results'
          path: tmp/ref-xml-reports-downloaded
          if_no_artifact_found: true
      - name: setup gradle
        uses: gradle/gradle-build-action@v2.12.0
      - name: Split tests
        id: split-tests
        uses: r7kamura/split-tests-by-timings@9322bd292d9423e2bc5a65bec548901801341e3f
        with:
          reports: tmp/ref-xml-reports-downloaded
          glob: 'ethereum/referencetests/build/generated/sources/reference-test/**/*.java'
          total: ${{env.total-runners}}
          index: ${{ matrix.runner_index }}
      - name: compose gradle args
        run: echo ${{ steps.split-tests.outputs.paths }} | sed -e 's/^.*java\///' -e 's@/@.@g' -e 's/\.java//' -e 's/^/--tests /' > refTestArgs.txt
      - name: run reference tests
        run: ./gradlew ethereum:referenceTests:referenceTests `cat refTestArgs.txt` -Dorg.gradle.parallel=true -Dorg.gradle.caching=true
      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        if: always() # always run even if the previous step fails
        with:
          name: reference-test-node-${{matrix.runner_index}}-results
          path: '**/build/test-results/referenceTests/TEST-*.xml'
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@5f47764eec0e1c1f19f40c8e60a5ba47e47015c5
        if: success() || failure() # always run even if the build step fails
        with:
          report_paths: '**/build/test-results/referenceTest/TEST-*.xml'
  reference-tests:
    runs-on: ubuntu-22.04
    needs: [ referenceTestEthereum ]
    permissions:
      checks: write
      statuses: write
    steps:
      - name: consolidation
        run: echo "consolidating statuses"

